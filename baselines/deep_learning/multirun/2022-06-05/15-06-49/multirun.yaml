hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra: []
    task:
    - set.eval=true,true,true,true,true
  job:
    name: main
    override_dirname: set.eval=true,true,true,true,true
    id: ???
    num: ???
    config_name: config
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.1.1
    cwd: /home/gqw98/dcaseTask5/baselines/deep_learning
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/gqw98/dcaseTask5/baselines/deep_learning
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    choices:
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
set:
  features: false
  train: false
  eval: false
path:
  root_dir: /home/gqw98/dcaseTask5/baselines/deep_learning
  train_dir: /home/gqw98/dcaseTask5/Development_Set/Training_Set
  eval_dir: /home/gqw98/dcaseTask5/Development_Set/Validation_Set
  feat_path: ${path.root_dir}/Features
  feat_train: ${path.feat_path}/feat_train
  feat_eval: ${path.feat_path}/feat_eval
  Model: ${path.root_dir}/model weights
  best_model: ${path.Model}/best_model.pth
  last_model: ${path.Model}/last_model.pth
features:
  seg_len: 0.2
  hop_seg: 0.05
  eps: 2.220446049250313e-16
  fmax: 11025
  fmin: 50
  sr: 22050
  n_fft: 1024
  n_mels: 128
  hop_mel: 256
train:
  num_classes: 15
  n_shot: 5
  k_way: 10
  device: cuda
  lr_rate: 0.0001
  scheduler_gamma: 0.5
  scheduler_step_size: 10
  epochs: 15
  encoder: Resnet
eval:
  samples_neg: 650
  iterations: 3
  query_batch_size: 8
  negative_set_batch_size: 64
